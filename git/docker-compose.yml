services:
  foregjo:
    image: codeberg.org/forgejo/forgejo:12
    container_name: forgejo
    environment:
      - USER_UID=1000
      - USER_GID=1000
      - FORGEJO__database__DB_TYPE=postgres
      - FORGEJO__database__HOST=db:5432
      - FORGEJO__database__NAME=forgejo
      - FORGEJO__database__USER=forgejo
      - FORGEJO__database__PASSWD=forgejo
      - ENABLE_NOTIFY_MAIL=true
    restart: unless-stopped
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ./forgejo:/data
    ports:
      - 8017:3000
      - 222:22
    depends_on:
      - db

  runner:
    image: code.forgejo.org/forgejo/runner:9
    container_name: forgejo_runner
    user: 0:0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./runner:/data
    environment:
      - CONFIG_FILE=/data/config.yaml
    restart: 'unless-stopped'
    command: '/bin/sh -c "sleep 5; forgejo-runner daemon"'

  db:
    image: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=forgejo
      - POSTGRES_PASSWORD=forgejo
      - POSTGRES_DB=forgejo
    volumes:
      - ./db:/var/lib/postgresql/data

  mongo:
    image: mongo
    container_name: komodo-mongo
    command: --quiet --wiredTigerCacheSizeGB 0.25
    restart: unless-stopped
    logging:
      driver: ${COMPOSE_LOGGING_DRIVER:-local}
    volumes:
      - ./komodo/mongo/db:/data/db
      - ./komodo/mongo/config:/data/configdb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${KOMODO_DB_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${KOMODO_DB_PASSWORD:-hQthJRVPcS}
    labels:
      komodo.skip: # Prevent Komodo from stopping with StopAllContainers

  core:
    image: ghcr.io/moghtech/komodo-core:${COMPOSE_KOMODO_IMAGE_TAG:-latest}
    container_name: komodo-core
    restart: unless-stopped
    depends_on:
      - mongo
    logging:
      driver: ${COMPOSE_LOGGING_DRIVER:-local}
    ports:
      - 9120:9120
    env_file: ./.env
    environment:
      KOMODO_DATABASE_ADDRESS: mongo:27017
      KOMODO_DATABASE_USERNAME: ${KOMODO_DB_USERNAME:-admin}
      KOMODO_DATABASE_PASSWORD: ${KOMODO_DB_PASSWORD:-hQthJRVPcS}
    volumes:
      ## Core cache for repos for latest commit hash / contents
      - ./komodo/core/repos:/repo-cache
    labels:
      komodo.skip: # Prevent Komodo from stopping with StopAllContainers

  periphery:
    image: ghcr.io/moghtech/komodo-periphery:${COMPOSE_KOMODO_IMAGE_TAG:-latest}
    container_name: komodo-periphery
    restart: unless-stopped
    logging:
      driver: ${COMPOSE_LOGGING_DRIVER:-local}
    env_file: ./.env
    environment:
      PERIPHERY_REPO_DIR: ${PERIPHERY_ROOT_DIRECTORY:-/etc/komodo}/repos
      PERIPHERY_STACK_DIR: ${PERIPHERY_ROOT_DIRECTORY:-/etc/komodo}
      PERIPHERY_SSL_KEY_FILE: ${PERIPHERY_ROOT_DIRECTORY:-/etc/komodo}/git/ssl/key.pem
      PERIPHERY_SSL_CERT_FILE: ${PERIPHERY_ROOT_DIRECTORY:-/etc/komodo}/git/ssl/cert.pem
    volumes:
      ## Mount external docker socket
      - /var/run/docker.sock:/var/run/docker.sock
      ## Allow Periphery to see processes outside of container
      - /proc:/proc
      ## Specify the Periphery agent root directory - must be the same inside and outside the container.
      - ${PERIPHERY_ROOT_DIRECTORY:-/etc/komodo}:${PERIPHERY_ROOT_DIRECTORY:-/etc/komodo}
      ## Custom location for docker compose repo
      - /home/marcel/nas-compose:/home/marcel/nas-compose
    labels:
      komodo.skip: # Prevent Komodo from stopping with StopAllContainers
